version: '3.8'

services:

  redis:
    container_name: nestjs_redis
    restart: unless-stopped
    image: redis:7-bullseye
    networks:
      - nestjs_app
    ports:
      - '${REDIS_PORT}:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
      REDIS_HOSTS: nestjs_redis
      REDIS_HOST: nestjs_redis
      REDIS_PORT: redis:6379
    networks:
      - nestjs_app
    ports:
      - '${REDIS_COMMANDER_PORT}:8081'
    healthcheck:
      test: ['CMD', '/redis-commander/bin/healthcheck.js']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: nestjs_backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - nestjs_app
    depends_on:
      - redis
    volumes:
      - .:/usr/src/app
      - nestjs_app_vendor:/usr/src/app/node_modules
    healthcheck:
      test: ['CMD', 'curl', 'localhost:${BACKEND_PORT}']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  nestjs_app_vendor:

networks:
  nestjs_app:
